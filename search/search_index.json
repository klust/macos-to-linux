{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Using Windows as a client and development platform for HPC","text":"<ul> <li>Introduction</li> <li>Protocols and technologies (on other site)</li> <li>Enhancing the macOS environment</li> <li>Software<ul> <li>File access via SSHFS</li> </ul> </li> </ul>"},{"location":"0_00_introduction/","title":"Introduction","text":"<p>This is a guide which is very much a work-in-progress about connecting to supercomputers from macOS and creating a supercomputer-like environment on the Mac. It is far from complete and mirrors mostly what I do myself or questions I got in tickets and as such is more of a  partial knowledge base. At the same time it goes further than the documentation provided by the Vlaams Supercomputer Centrum which I work for, but is not as well maintained.</p> <p>Disclaimer: This is unofficial documentation and work-in-progress. It is the result of my work at the  CalcUA service of the University of Antwerp for the  Vlaams Supercomputer Centrum. However, as my main machine for work is macOS-based, this documentation is mostly written when I am working from home.</p>"},{"location":"1_ProtocolsTechnologies/","title":"Protocols and technologies","text":"<p>See the chapter in the \"Using Windows as a client for HPC\" site.</p>"},{"location":"2_UNIX_Environment/","title":"Enhancing the macOS environment","text":"<p>The macOS operating system already offers a Linux-like environment as under the hood macOS is build on a BSD UNIX implementation. Much UNIX/Linux text-based software can  be ported rather easily to macOS and there are several installers that help to install such tools on macOS.</p>"},{"location":"3_Software/","title":"Software","text":"<ul> <li> <p>Command line access via SSH</p> </li> <li> <p>File transfer via sftp</p> </li> <li> <p>File access via SSHFS</p> </li> <li> <p>X server</p> </li> <li> <p>VNC clients</p> </li> </ul>"},{"location":"3_Software/3_03_SSHFS/","title":"SSHFS on macOS","text":"<p>SSHFS is a way to mount a remote file system over ssh. Under the hood it talks to  the ssh/sftp daemon on the server and sends commands to download or upload files when needed.</p> <p>It is not a true network file system so you have to be careful not to change files on both sides of the connection simultaneously. It does not offer any protection against this, e.g., full or partial file locking. Modifying files directly on  the server and on a mounted volume simultaneously will lead to unpredictable results.</p> <p>On Linux, where it was first introduced, sshfs is a userspace file system. So one needs tp first install a piece of software called FUSE to support user space file systems, and then the software that provides sshfs.  Implementations on other operating systems often follow a similar approach.</p> <p>Note however that at the time of writing of this text (June 2023) the Linux sshfs project is without maintainer, though there are some forks in which further development seems to be happening. If no new maintainer is found, it is rather likely that sshfs will be abandoned by Linux distributions as security bugs are no longer fixed, and it is unclear what the future is of ports to other operating systems.</p>"},{"location":"3_Software/3_03_SSHFS/#open-source-implementation-based-on-macfuse","title":"Open-source implementation based on macFUSE","text":"<p>There is a command line open source implementation for macOS that follows the principles also used on Linux, as part of the macFUSE (previously OSXFuse) project.</p> <p>Installation is done in two parts. First a  recent version of macFUSE  has to be installed.  The implementation at the time of writing (June 2023) still relies on kernel extensions, a mechanism  that Apple wants to get rid off due to security concerns, and which requires relaxing security settings on Apple Silicon macs. It is to be expected that this implementation will stop working on  a future version of macOS. </p> <p>Next one can install SSHFS. SSHFS hasn't been maintained since 2014 and our experience is that it does not always work well anymore. E.g., when connecting to  LUMI, a Cray EX system running SUSE Linux, it fails to follow symbolic links to directories on the  Lustre file system of which the userid connecting is not the owner.</p> <p>The version number (2.5.0 in June 2023, released back in 2014) also suggests that the macOS implementation is derived from an ancient version of the Linux sshfs implementation (which stopped at version 3.7.3).</p> <p>There is a fork that saw development as recent as the summer of 2022 (at the time of writing in June 2023) but that fork also is still derived  from a rather old version of the Linux sshfs implementation and hence may not solve all problems with  the implementation by the macFUSE project. According to the README file this is because the macFUSE  project does not offer support for the newer libfuse 3 API. Testing does show though that at least some problems with the 2.5.0 implementation are not present in this version (and in particular the problem mentioned when following links).</p> Links <ul> <li>macFUSE GitHub repository</li> <li>sshfs in the macFUSE proejct GitHub repository</li> <li>A forkof the macFUSE sshfs implementation</li> </ul>"},{"location":"3_Software/3_03_SSHFS/#commercial-implementations","title":"Commercial implementations","text":"<p>Below is just a selection of applications. The list doesn't aim to be complete.</p> <ul> <li> <p>Mountain Duck is a package from the developers of     CyberDuck that supports not only the sftp protocol (on which sshfs implementations     are based) but also several cloud storage technologies, including S3. Contrary to     CyberDuck it also allows to mount volumes and claims to use smart synchronization     that also enables offline work. It supports both Windows and macOS.</p> <p>It does not use the macOS File PRovider API, because - as they claim - the latter can only cache in <code>~/Library/CloudStorage</code> and not on external drives which may be needed for larger volumes.</p> <p>There is native support for Apple Silicon.</p> </li> <li> <p>ExpanDrive provides two products that both support more     than just sshfs-like access:</p> <ul> <li> <p>Strongsync is their newer implementation      using the macOS File Provider API. It does not need any kernel extension and offers     native support for Apple Silicon machines. It is the preferred implementation for     newer macOS machines but is not yet as complete in its support for other cloud     storage technologies as the next product.</p> </li> <li> <p>ExpanDrive is the older product that is also     available for Windows and Linux. It offers support for a huge array of cloud services     and includes support for Amazon S3. It looks like it still uses a kernel extension though     on macOS that provides FUSE functionality (certainly older versions did).</p> </li> </ul> </li> <li> <p>NetDrive is a commercial package for Windows and macOS that does not     only support SSHFS but can also mount several other types of cloud storage as if it is a local file     system, including, e.g., S3. There is a personal version which is still relatively cheap, but the     team version which is needed to offer full privacy also on multi-user PCs is rather expensive to     academic standards.</p> </li> <li> <p>/n software SFTP Drive also supports macOS besides Windows and Linux.</p> </li> <li> <p>CloudMounter is another package enabling mounting from an     sftp server, and it too supports some other cloud storage technologies. It also exists in a version for Windows.</p> </li> </ul>"}]}